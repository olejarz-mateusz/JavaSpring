/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.35
 * Generated at: 2018-12-14 17:33:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>ITD Inspector Helper</title>\r\n");
      out.write("<meta name=\"description\" content=\"Program wspomagajacy prace inspeckcji transportu drogowego\">\r\n");
      out.write("<meta name=\"keywords\" content=\"inspekcja, transport, drogowy, sluzby, droga\">\r\n");
      out.write("<meta name=\"author\" content=\"Mateusz Olejarz\">\r\n");
      out.write("<!-- <link rel=\"stylesheet\" type=\"text/css\" href=\"/JavaWebApplication/css/reset.css\"> -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/JavaWebApplication/css/styles.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"container\">\r\n");
      out.write("\t\t<!-- Header -->\r\n");
      out.write("\t\t<header id=\"header\">\r\n");
      out.write("\t\t\t<div class=\"inner\">\r\n");
      out.write("\t\t\t\t<a href=\"index.html\" class=\"logo\"><strong>Projekt</strong> stworzony przez <strong>Mateusz Olejarz</strong>, Grzegorz Paryś, Jarosław Nowak</a>\r\n");
      out.write("\t\t\t\t<nav id=\"nav\">\r\n");
      out.write("\t\t\t\t\t<a href=\"#banner\">Strona główna</a>\r\n");
      out.write("\t\t\t\t\t<a href=\"#three\">Nowości</a>\r\n");
      out.write("\t\t\t\t\t<a href=\"jsp/login.jsp\">Zaloguj</a>\r\n");
      out.write("\t\t\t\t\t<a href=\"jsp/register.jsp\">Zarejestruj</a>\r\n");
      out.write("\t\t\t\t\t<a href=\"http://localhost:8080/JavaWebApplication/Dokument\">Dokumentacja</a>\r\n");
      out.write("\t\t\t\t\t<a href=\"#footer\">Kontakt</a>\r\n");
      out.write("\t\t\t\t</nav>\r\n");
      out.write("\t\t\t\t<a href=\"#navPanel\" class=\"navPanelToggle\"><span class=\"fa fa-bars\"></span></a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</header>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- Banner -->\r\n");
      out.write("\t\t<section id=\"banner\">\r\n");
      out.write("\t\t\t<div class=\"inner\">\r\n");
      out.write("\t\t\t\t<header>\r\n");
      out.write("\t\t\t\t\t<h1>Witaj w programie</h1>\r\n");
      out.write("\t\t\t\t</header>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"flex\">\r\n");
      out.write("\t\t\t\t\t<div class=\"procent\">\r\n");
      out.write("\t\t\t\t\t\t<h3>Wspomaganie</h3>\r\n");
      out.write("\t\t\t\t\t\t<p>Wspomaganie w przygotowywaniu raportów, naliczaniu kar i innych.</p>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"procent\">\r\n");
      out.write("\t\t\t\t\t\t<h3>Panel osobisty</h3>\r\n");
      out.write("\t\t\t\t\t\t<p>Specjalny panel do przechowywania osobistych notatek, grafiku, organizera itp.</p>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"procent\">\r\n");
      out.write("\t\t\t\t\t\t<h3>Przyjazny interfejs</h3>\r\n");
      out.write("\t\t\t\t\t\t<p>Łatwa i intuicyjna obsługa dla każdego.</p>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<footer>\r\n");
      out.write("\t\t\t\t\t<a href=\"http://localhost:8080/JavaWebApplication/Dokument\" class=\"button\">Zapoznaj się z projektem</a>\r\n");
      out.write("\t\t\t\t</footer>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</section>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- Three -->\r\n");
      out.write("\t\t<section id=\"three\" class=\"wrapper align-center\">\r\n");
      out.write("\t\t\t<div class=\"inner\">\r\n");
      out.write("\t\t\t\t<div class=\"flex flex-2\">\r\n");
      out.write("\t\t\t\t\t<article>\r\n");
      out.write("\t\t\t\t\t\t<header>\r\n");
      out.write("\t\t\t\t\t\t\t<h3>Aktualizacja v1.0<br/> Stworzenie projektu</h3>\r\n");
      out.write("\t\t\t\t\t\t</header>\r\n");
      out.write("\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t\tUstawiono kodowanie znaków, dodano odpowiednie zmienne do pliku pom.xml<br/>\r\n");
      out.write("\t\t\t\t\t\t\tW projekcie umieszczone zostałe wszystkie przewidywane strony (.jsp)<br/>\r\n");
      out.write("\t\t\t\t\t\t\tUstanowiono połączenia między plikami<br/>\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t</article>\r\n");
      out.write("\t\t\t\t\t<article>\r\n");
      out.write("\t\t\t\t\t\t<header>\r\n");
      out.write("\t\t\t\t\t\t\t<h3>Aktualizacja v1.1<br/> Logowanie i Rejestracja</h3>\r\n");
      out.write("\t\t\t\t\t\t</header>\r\n");
      out.write("\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t\tStworzone zostały servlety Logowania i Rejestracji<br/>\r\n");
      out.write("\t\t\t\t\t\t\tWypełniono strony odpowiedzialne za logowanie i rejestracje<br/> \r\n");
      out.write("\t\t\t\t\t\t\tUstanowiono połączenie z bazą danych w MySQL Workbench<br/>\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t</article>\r\n");
      out.write("\t\t\t\t\t<article>\r\n");
      out.write("\t\t\t\t\t\t<header>\r\n");
      out.write("\t\t\t\t\t\t\t<h3>Aktualizacja v1.2<br/> Rozpoczęcie pracy nad stroną prawną</h3>\r\n");
      out.write("\t\t\t\t\t\t</header>\r\n");
      out.write("\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t\tUtworzenie tymczasowego przeglądania dokumentow prawnych<br/>\r\n");
      out.write("\t\t\t\t\t\t\tRozpoczęcie prac nad bazą z zapisami prawnymi<br/> \r\n");
      out.write("\t\t\t\t\t\t\t!Nieukończone<br/>\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t</article>\r\n");
      out.write("\t\t\t\t\t<article>\r\n");
      out.write("\t\t\t\t\t\t<header>\r\n");
      out.write("\t\t\t\t\t\t\t<h3>Aktualizacja v1.3<br/> Praca nad wyglądem stron</h3>\r\n");
      out.write("\t\t\t\t\t\t</header>\r\n");
      out.write("\t\t\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t\t\tStrony, które nie wymagają już większych zmian dostały lepszy wygląd<br/>\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t</article>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</section>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- Footer -->\r\n");
      out.write("\t\t<footer id=\"footer\">\r\n");
      out.write("\t\t\t<div class=\"inner\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<h3>\r\n");
      out.write("\t\t\t\t\tWiadomość do administracji <br/>\r\n");
      out.write("\t\t\t\t\t(Aktualnie nie działa)\r\n");
      out.write("\t\t\t\t</h3>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<form action=\"#\" method=\"post\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"field half first\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"name\">Imię</label>\r\n");
      out.write("\t\t\t\t\t\t<input name=\"name\" id=\"name\" type=\"text\" placeholder=\"Imię\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field half\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"email\">Email</label>\r\n");
      out.write("\t\t\t\t\t\t<input name=\"email\" id=\"email\" type=\"email\" placeholder=\"Email\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"field\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"message\">Wiadomość</label>\r\n");
      out.write("\t\t\t\t\t\t<textarea name=\"message\" id=\"message\" rows=\"6\" placeholder=\"Wpisz tekst\"></textarea>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<ul class=\"actions\">\r\n");
      out.write("\t\t\t\t\t\t<li><input value=\"Send Message\" class=\"button alt\" type=\"submit\"></li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</footer>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
